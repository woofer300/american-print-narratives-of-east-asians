# Generated by Selenium IDE
import pytest
import time
import json
from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.common.desired_capabilities import DesiredCapabilities

class TestDummytest():
  def setup_method(self, method):
    self.driver = webdriver.Chrome()
    self.vars = {}
  
  def teardown_method(self, method):
    self.driver.quit()
  
  def wait_for_window(self, timeout = 2):
    time.sleep(round(timeout / 1000))
    wh_now = self.driver.window_handles
    wh_then = self.vars["window_handles"]
    if len(wh_now) > len(wh_then):
      return set(wh_now).difference(set(wh_then)).pop()
  
  def test_dummytest(self):
    self.driver.get("https://www.newspapers.com/")
    self.driver.set_window_size(1552, 840)
    self.driver.find_element(By.CSS_SELECTOR, ".d-xl-inline").click()
    self.driver.find_element(By.ID, "email").click()
    self.driver.find_element(By.ID, "email").send_keys("christopher.voon@gmail.com")
    self.driver.find_element(By.ID, "password").click()
    self.driver.find_element(By.ID, "password").send_keys("track3isthebest")
    self.driver.find_element(By.CSS_SELECTOR, ".primary").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".primary > span")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.ID, "keyword-input").click()
    self.driver.find_element(By.ID, "keyword-input").send_keys("Chinese immigrants")
    self.driver.find_element(By.CSS_SELECTOR, ".c-pointer").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".icon-cal")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, ".icon-cal")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, ".icon-cal")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, ".icon-cal")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, ".icon-cal")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, ".icon-cal")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, ".icon-cal")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".icon-cal").click()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".border-top:nth-child(2) > .d-flex:nth-child(1) > .text-capitalize").click()
    element = self.driver.find_element(By.ID, "primary-filter-button-world")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    element = self.driver.find_element(By.CSS_SELECTOR, "body")
    actions = ActionChains(self.driver)
    actions.move_to_element(element, 0, 0).perform()
    self.driver.find_element(By.ID, "location-input").click()
    self.driver.find_element(By.ID, "location-input").send_keys("United")
    self.driver.find_element(By.CSS_SELECTOR, ".text-wrap").click()
    self.driver.find_element(By.CSS_SELECTOR, ".d-sm-block:nth-child(2)").click()
    self.driver.find_element(By.CSS_SELECTOR, "#\\37 71010014 img").click()
    self.driver.find_element(By.ID, "btn-print").click()
    self.driver.find_element(By.CSS_SELECTOR, ".jpg > .print-save-option-preview").click()
    self.vars["window_handles"] = self.driver.window_handles
    self.driver.find_element(By.CSS_SELECTOR, ".jpg > .text-dark").click()
    self.vars["win8058"] = self.wait_for_window(2000)
    self.vars["root"] = self.driver.current_window_handle
    self.driver.switch_to.window(self.vars["win8058"])
    self.driver.close()
    self.driver.switch_to.window(self.vars["root"])
    self.driver.find_element(By.CSS_SELECTOR, ".rounded-0 > .icon-news").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".ScreenLogo")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.execute_script("window.scrollTo(0,2553.60009765625)")
    self.driver.find_element(By.CSS_SELECTOR, ".default > span").click()
    element = self.driver.find_element(By.CSS_SELECTOR, ".SearchResult_SearchResult__aRDdm:nth-child(11) > #undefined .skeleton:nth-child(3)")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.find_element(By.CSS_SELECTOR, ".default > span").click()
    self.driver.find_element(By.CSS_SELECTOR, ".default > span").click()
    self.driver.execute_script("window.scrollTo(0,0)")
    element = self.driver.find_element(By.CSS_SELECTOR, "#\\37 71010014 li:nth-child(2) > .Pill")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.driver.execute_script("window.scrollTo(0,116)")
    self.driver.find_element(By.CSS_SELECTOR, "#\\37 70287712 img").click()
    self.driver.find_element(By.ID, "btn-print").click()
    self.driver.find_element(By.LINK_TEXT, "Entire Page").click()
    element = self.driver.find_element(By.LINK_TEXT, "Entire Page")
    actions = ActionChains(self.driver)
    actions.move_to_element(element).perform()
    self.vars["window_handles"] = self.driver.window_handles
    self.driver.find_element(By.CSS_SELECTOR, ".jpg > .text-dark").click()
    self.vars["win5758"] = self.wait_for_window(2000)
    self.driver.switch_to.window(self.vars["win5758"])
    self.driver.close()
    self.driver.switch_to.window(self.vars["root"])
  
